=begin
#reattract.io API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Contact: support@reattract.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::DefaultApi)
    end
  end

  # unit tests for api_v1_organizations_get
  # List organizations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [Array<Organization>]
  describe 'api_v1_organizations_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_organizations_id_delete
  # Delete an organization
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [nil]
  describe 'api_v1_organizations_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_organizations_id_get
  # Retrieve an organization
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [Organization]
  describe 'api_v1_organizations_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_organizations_id_patch
  # Update an organization
  # @param id id
  # @param organization 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [Organization]
  describe 'api_v1_organizations_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_organizations_post
  # Create an organization
  # @param organization 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [Organization]
  describe 'api_v1_organizations_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_users_id_get
  # Retrieve a user
  # @param id id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [User]
  describe 'api_v1_users_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_users_id_patch
  # Update a user
  # @param id id
  # @param user 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [User]
  describe 'api_v1_users_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_users_profile_get
  # Retrieve user profile information based on JWT
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [User]
  describe 'api_v1_users_profile_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_users_registrations_post
  # User sign up
  # @param user 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @return [nil]
  describe 'api_v1_users_registrations_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_users_sessions_delete
  # Sign out as a user
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @option opts [String] :authorization 
  # @return [nil]
  describe 'api_v1_users_sessions_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_users_sessions_post
  # Sign in as a user
  # @param user_authentication 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :accept 
  # @return [nil]
  describe 'api_v1_users_sessions_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
